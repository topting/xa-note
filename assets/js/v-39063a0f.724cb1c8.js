"use strict";(self.webpackChunkxa_note_code=self.webpackChunkxa_note_code||[]).push([[444],{4778:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-39063a0f",path:"/docs/miniprogram-permission.html",title:"微信小程序-权限判断处理",lang:"en-US",frontmatter:{title:"微信小程序-权限判断处理"},excerpt:"",headers:[{level:2,title:"背景",slug:"背景",children:[]},{level:2,title:"前期思路",slug:"前期思路",children:[]},{level:2,title:"探索",slug:"探索",children:[{level:3,title:"一、函数方向",slug:"一、函数方向",children:[]},{level:3,title:"二、变量方向 ✅",slug:"二、变量方向-✅",children:[]}]},{level:2,title:"最终方案",slug:"最终方案",children:[{level:3,title:"思路",slug:"思路",children:[]},{level:3,title:"实现",slug:"实现",children:[]},{level:3,title:"易忽略的关键点",slug:"易忽略的关键点",children:[]}]}],git:{createdTime:1653449418e3,updatedTime:1653449418e3,contributors:[{name:"Sunny.D",email:"dht.sunny@qq.com",commits:1}]},filePathRelative:"docs/miniprogram-permission.md"}},362:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><ul><li>首先在管理后台配置用户的权限。再在微信小程序上登录，登录后的所有操作，页面展示区域，要根据当前登录用户的所有权限展示。</li><li>用户的权限，已经在前期统一处理为权限code</li></ul><h2 id="前期思路" tabindex="-1"><a class="header-anchor" href="#前期思路" aria-hidden="true">#</a> 前期思路</h2><p>大致方向有 2 个：</p><ol><li>通过函数的方式，结合 <code>wx-if</code>，去处理权限</li><li>通过使用变量，结合 <code>wx-if</code> 去实现</li></ol><h2 id="探索" tabindex="-1"><a class="header-anchor" href="#探索" aria-hidden="true">#</a> 探索</h2><h3 id="一、函数方向" tabindex="-1"><a class="header-anchor" href="#一、函数方向" aria-hidden="true">#</a> 一、函数方向</h3><ul><li><code>wx-if=&quot;fn(permissionCode)&quot;</code> 去处理。忽略了微信小程序<code>wxml</code>模板中，不支持直接调用函数。</li><li>在 <code>wxs</code> 脚本中，定义权限函数。发现，<code>wxs</code>中不能使用小程序提供的各种API能力，但权限判断又是个全局性的功能，必须要用到API。即便可以实现，需要在每个页面中重复相同的wxs。如果 <code>js</code> 中也需要权限处理，又需要定义灵台一套逻辑。所以这个方法也行不通。</li></ul><h3 id="二、变量方向-✅" tabindex="-1"><a class="header-anchor" href="#二、变量方向-✅" aria-hidden="true">#</a> 二、变量方向 ✅</h3><p>把所有权限 <code>code</code>，存在一个对象中。<code>true/false</code> 表示，是否有权限。每次调用权限，直接读取变量。</p><h2 id="最终方案" tabindex="-1"><a class="header-anchor" href="#最终方案" aria-hidden="true">#</a> 最终方案</h2><h3 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h3><ol><li>整理权限集合</li><li>从接口获取权限</li><li>对比接口数据，存储权限</li><li>读取本次存储权限</li><li>页面上，进行权限判断</li></ol><h3 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h3><h4 id="step-1-整理收集所有权限" tabindex="-1"><a class="header-anchor" href="#step-1-整理收集所有权限" aria-hidden="true">#</a> STEP-1 整理收集所有权限</h4><p>每一个权限变量的名称为 p + 权限码，值为 true / false（当前用户是否有权限），默认无权限。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> permissionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">[</span>\n    <span class="token string">&quot;02&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 权限码</span>\n    <span class="token punctuation">{</span>\n      <span class="token string-property property">&quot;p02&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;移动端&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nxhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./t_permission.json&#39;</span><span class="token punctuation">)</span>\nxhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> rep <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>response<span class="token punctuation">)</span>\n    <span class="token function">handlePermission</span><span class="token punctuation">(</span>rep<span class="token punctuation">.</span><span class="token constant">RECORDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\nxhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">function</span> <span class="token function">handlePermission</span><span class="token punctuation">(</span><span class="token parameter">rep</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> rep<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> p <span class="token operator">=</span> rep<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n        <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">p</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>p<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>code<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;02&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n            obj<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n            obj<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> p<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n                p<span class="token punctuation">.</span>code<span class="token punctuation">,</span>\n                obj\n            <span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="step-2-读取接口-生成权限-map-并存储" tabindex="-1"><a class="header-anchor" href="#step-2-读取接口-生成权限-map-并存储" aria-hidden="true">#</a> STEP-2 读取接口，生成权限 <code>Map</code>，并存储</h4><ol><li>请求 <code>/user/info</code></li><li>拿到接口数据，生成权限。并全局存储，挂到 <code>globalData</code>，并更改 <code>getUserDone</code>为 <code>true</code>，表示用户权限已经拉取并且调整完毕</li></ol><h4 id="step-3-页面监听-getuserdone-设置权限" tabindex="-1"><a class="header-anchor" href="#step-3-页面监听-getuserdone-设置权限" aria-hidden="true">#</a> STEP-3 页面监听 <code>getUserDone</code>，设置权限</h4><p>在生命周期内（<code>onLoad/onShow</code>）内调用 <code>globalData</code> 的 <code>watch</code>方法，监听 <code>getUserDone</code>。当前值为 <code>true</code>，读取权限，并挂到当前页面。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token string">&#39;getUserDone&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">permission</span><span class="token operator">:</span> <span class="token function">globalData</span><span class="token punctuation">(</span><span class="token string">&#39;permission&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    \n    <span class="token comment">// 其他需要的操作</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chart-container<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{permission.p020206}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--...--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="易忽略的关键点" tabindex="-1"><a class="header-anchor" href="#易忽略的关键点" aria-hidden="true">#</a> 易忽略的关键点</h3><ol><li>权限 <code>Map</code>：需要在本地存储所有权限，每次动态更新权限集，减少接口压力，方便排查权限相关的问题。</li><li>权限调用，必须在权限生成之后。</li></ol>',26),e={},t=(0,a(3744).Z)(e,[["render",function(n,s){return p}]])}}]);